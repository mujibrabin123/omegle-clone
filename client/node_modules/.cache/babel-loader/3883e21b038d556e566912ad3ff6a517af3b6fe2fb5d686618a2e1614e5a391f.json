{"ast":null,"code":"// firebase.js\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, setPersistence, browserLocalPersistence, GoogleAuthProvider } from \"firebase/auth\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCK1pdvlEvD4z-FjQHD17xp7r82ZxO3eD8\",\n  authDomain: \"talkvee-c046f.firebaseapp.com\",\n  projectId: \"talkvee-c046f\",\n  storageBucket: \"talkvee-c046f.firebasestorage.app\",\n  messagingSenderId: \"212654275763\",\n  appId: \"1:212654275763:web:48a29908e13c1d13fe04c6\",\n  measurementId: \"G-KBQSQ15KF3\"\n};\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\n\n// Explicitly set auth persistence to local storage to maintain user sessions\nsetPersistence(auth, browserLocalPersistence).then(() => {\n  console.log(\"Firebase auth persistence set to local.\");\n}).catch(error => {\n  console.error(\"Error setting Firebase auth persistence:\", error);\n});\nconst googleProvider = new GoogleAuthProvider();\nexport { auth, googleProvider };","map":{"version":3,"names":["initializeApp","getAuth","setPersistence","browserLocalPersistence","GoogleAuthProvider","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","auth","then","console","log","catch","error","googleProvider"],"sources":["C:/Users/mujib/omegle-clone/client/src/firebase.js"],"sourcesContent":["// firebase.js\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth, setPersistence, browserLocalPersistence, GoogleAuthProvider } from \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCK1pdvlEvD4z-FjQHD17xp7r82ZxO3eD8\",\r\n  authDomain: \"talkvee-c046f.firebaseapp.com\",\r\n  projectId: \"talkvee-c046f\",\r\n  storageBucket: \"talkvee-c046f.firebasestorage.app\",\r\n  messagingSenderId: \"212654275763\",\r\n  appId: \"1:212654275763:web:48a29908e13c1d13fe04c6\",\r\n  measurementId: \"G-KBQSQ15KF3\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth(app);\r\n\r\n// Explicitly set auth persistence to local storage to maintain user sessions\r\nsetPersistence(auth, browserLocalPersistence)\r\n  .then(() => {\r\n    console.log(\"Firebase auth persistence set to local.\");\r\n  })\r\n  .catch((error) => {\r\n    console.error(\"Error setting Firebase auth persistence:\", error);\r\n  });\r\n\r\nconst googleProvider = new GoogleAuthProvider();\r\n\r\nexport { auth, googleProvider };\r\n\r\n"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,cAAc,EAAEC,uBAAuB,EAAEC,kBAAkB,QAAQ,eAAe;AAEpG,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,+BAA+B;EAC3CC,SAAS,EAAE,eAAe;EAC1BC,aAAa,EAAE,mCAAmC;EAClDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,GAAG,GAAGb,aAAa,CAACK,cAAc,CAAC;AACzC,MAAMS,IAAI,GAAGb,OAAO,CAACY,GAAG,CAAC;;AAEzB;AACAX,cAAc,CAACY,IAAI,EAAEX,uBAAuB,CAAC,CAC1CY,IAAI,CAAC,MAAM;EACVC,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;AACxD,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;EAChBH,OAAO,CAACG,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;AAClE,CAAC,CAAC;AAEJ,MAAMC,cAAc,GAAG,IAAIhB,kBAAkB,CAAC,CAAC;AAE/C,SAASU,IAAI,EAAEM,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}